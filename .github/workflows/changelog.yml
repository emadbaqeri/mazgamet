# file: changelog.yml
name: Generate Changelog Notes

permissions:
  contents: read # Needed to checkout code and read commit history

on:
  workflow_dispatch: # Can be run manually if needed
  # Removed push trigger - let release workflow handle notes

# Cancel redundant runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-changelog-notes:
    name: Generate Release Notes Content
    runs-on: ubuntu-latest
    outputs:
      changelog_content: ${{ steps.changelog_builder.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for commit history

      # Optional: Check if tags exist; action might handle this gracefully
      - name: Check for tags
        id: check_tags
        run: |
          set -euo pipefail
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            echo "tags_exist=true" >> $GITHUB_OUTPUT
            echo "::notice::Tags found."
          else
            echo "tags_exist=false" >> $GITHUB_OUTPUT
            echo "::warning::No tags found. Changelog generation might be empty or fail."
        shell: bash

      - name: Generate Changelog Content using Builder Action
        id: changelog_builder
        # Use v4 which is current
        uses: mikepenz/release-changelog-builder-action@v4
        if: steps.check_tags.outputs.tags_exist == 'true'
        with:
          # Assumes .github/changelog-config.json exists and is configured
          # If not, remove this line or use default configuration
          configuration: ".github/changelog-config.json"
          ignorePreReleases: true
          # Use 'Unreleased' or similar placeholder if needed, or let it compare latest tags
          # fromTag: # Optional: specify start tag
          # toTag: # Optional: specify end tag (defaults to latest)
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }} # Action uses this implicitly

      - name: Display Generated Changelog
        if: steps.check_tags.outputs.tags_exist == 'true'
        run: |
          set -euo pipefail
          echo "Generated Changelog Content:"
          echo "${{ steps.changelog_builder.outputs.changelog }}"
        shell: bash

      # Instead of committing, this job now focuses on generating the content.
      # The release workflow can trigger this workflow or use the action directly.
