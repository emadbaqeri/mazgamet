# file: ci.yml
name: CI

permissions:
  contents: read # Needed to checkout the code

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Cancel redundant runs on PRs, but let pushes to main complete
concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.sha || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Allow all matrix jobs to finish
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Keep specific versions for stability, ensure 1.76 is still relevant or update
        rust: [stable, beta, nightly, "1.76"]
        exclude:
          # Keep exclusions if they significantly speed up CI and are acceptable
          - os: windows-latest
            rust: beta
          - os: windows-latest
            rust: nightly
          - os: macos-latest
            rust: beta
          - os: macos-latest
            rust: nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@stable # Use stable tag
        with:
          toolchain: ${{ matrix.rust }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --workspace --all-features --locked
        shell: bash

  lints:
    name: Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, nightly]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable # Use stable tag
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt (check)
        run: cargo fmt --all -- --check
        shell: bash

      - name: Run cargo clippy
        # Add --locked to ensure lockfile is respected
        run: cargo clippy --workspace --all-targets --all-features --locked -- -D warnings
        shell: bash

  docs:
    name: Docs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, nightly]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable # Use stable tag
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Check documentation compilation
        env:
          RUSTDOCFLAGS: -D warnings
        # Add --locked
        # Consider removing --no-deps if you want to catch doc issues in public dependencies
        run: cargo doc --workspace --no-deps --document-private-items --all-features --locked
        shell: bash
